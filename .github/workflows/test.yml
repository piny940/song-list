name: Test
on: [push]
jobs:
  backend:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
      redis:
        image: redis:alpine
        options: --health-cmd "redis-cli -h localhost ping" --health-interval 10s --health-timeout 5s --health-retries 15

    steps:
      - uses: actions/checkout@v2
      - name: Move to top directory
        env:
          SUB_DIR: backend
        run: |
          path=`pwd`
          mv $path/$SUB_DIR /tmp
          for dir in `find $path -maxdepth 0`
          do
            rm -rf $dir
          done
          for dir in `find /tmp/$SUB_DIR -maxdepth 0`
          do
            mv $dir $path
          done
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.2
          bundler-cache: true
      - name: Set Env
        run: |
          echo "RAILS_ENV=test" >> $GITHUB_ENV
          echo "TEST_PG_USER=postgres" >> $GITHUB_ENV
          echo "TEST_PG_PASSWORD=postgres" >> $GITHUB_ENV
          echo "TEST_PG_HOST=localhost" >> $GITHUB_ENV
          echo "REDIS_URL=redis://redis:6379/1" >> $GITHUB_ENV
      - name: DB setup
        run: bundle exec rails db:setup
      - name: Run rails test
        run: bundle exec rspec
      - name: Run rubocop
        run: if (bundle exec rubocop -A) | grep -E "(corrected|\ W:\ )"; then exit 1; fi

  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Move to top directory
        env:
          SUB_DIR: frontend
        run: |
          path=`pwd`
          mv $path/$SUB_DIR /tmp
          for dir in `find $path -maxdepth 0`
          do
            rm -rf $dir
          done
          for dir in `find /tmp/$SUB_DIR -maxdepth 0`
          do
            mv $dir $path
          done
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm キャッシュファイルは Linux/macOS の「~/.npm」に保存される
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Yarn install
        run: yarn --cwd frontend install
      - name: Prettier && ESLint
        run: yarn --cwd frontend next lint
