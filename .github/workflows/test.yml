name: Test
on:
  pull_request:
permissions:
  id-token: write
  contents: read
  pull-requests: read
env:
  NODE_VERSION: 22.14.0

jobs:
  filter:
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - uses: actions/checkout@v5
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            frontend:
              - "frontend/**"
              - ".github/workflows/test.yml"
            backend:
              - "backend/**"
              - ".github/workflows/test.yml"
  backend-test:
    runs-on: ubuntu-latest
    needs: filter
    if: needs.filter.outputs.backend == 'true'
    services:
      postgres:
        image: postgres:15.14-alpine
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
      redis:
        image: redis:alpine
        options: --health-cmd "redis-cli -h localhost ping" --health-interval 10s --health-timeout 5s --health-retries 15
    steps:
      - uses: actions/checkout@v4
      - name: Move to top directory
        env:
          SUB_DIR: backend
        run: |
          path=`pwd`
          mv $path/$SUB_DIR /tmp
          for dir in `find $path -maxdepth 0`
          do
            rm -rf $dir
          done
          for dir in `find /tmp/$SUB_DIR -maxdepth 0`
          do
            mv $dir $path
          done
      - name: Set Env
        run: |
          echo "RAILS_ENV=test" >> $GITHUB_ENV
          echo "TEST_PG_USER=postgres" >> $GITHUB_ENV
          echo "TEST_PG_PASSWORD=postgres" >> $GITHUB_ENV
          echo "TEST_PG_HOST=localhost" >> $GITHUB_ENV
          echo "REDIS_HOST=localhost:6379" >> $GITHUB_ENV
          echo "REDIS_PASSWORD=" >> $GITHUB_ENV
          echo "ADMIN_USER=admin@example.com" >> $GITHUB_ENV
          echo "ADMIN_PASSWORD=password" >> $GITHUB_ENV
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.4.4
          bundler-cache: true
      - name: DB setup
        run: bundle exec rails db:setup
      - name: Run rails test
        run: bundle exec rspec
      - name: Run rubocop
        run: if (bundle exec rubocop -A) | grep -E "(corrected|\ W:\ )"; then exit 1; fi

  front-lint:
    runs-on: ubuntu-latest
    needs: filter
    if: ${{ needs.filter.outputs.frontend == 'true' }}
    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4
        with:
          package_json_file: "frontend/package.json"
      - uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"
          cache-dependency-path: "frontend/pnpm-lock.yaml"
      - run: cd frontend && pnpm install
      - name: ESLint
        run: cd frontend && pnpm lint
  front-build-test:
    runs-on: ubuntu-latest
    needs: filter
    if: ${{ needs.filter.outputs.frontend == 'true' }}
    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4
        with:
          package_json_file: "frontend/package.json"
      - uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"
          cache-dependency-path: "frontend/pnpm-lock.yaml"
      - run: cd frontend && pnpm install
      - name: Build Test
        run: cd frontend && pnpm build
        env:
          BACKEND_HOST: http://rails:3000
