services:
  rails:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: song-list-rails
    container_name: song-list-rails
    depends_on:
      - db
    env_file:
      - ./backend/.env
    environment:
      - RAILS_ENV=production
    volumes:
      - public:/app/public
    tmpfs:
      - /app/tmp/pids

  migrate:
    container_name: song-list-migrate
    image: song-list-rails
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./backend/.env
    environment:
      - RAILS_ENV=production
    command: bundle exec rails db:migrate
    depends_on:
      - db

  sidekiq:
    container_name: song-list-sidekiq
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    env_file:
      - ./backend/.env
    environment:
      - RAILS_ENV=production
    command: bundle exec sidekiq
    depends_on:
      - redis
      - db

  next:
    container_name: song-list-next
    image: song-list-next
    env_file:
      - ./frontend/.env
    build:
      args:
        - BACKEND_HOST=http://rails:3000
      context: ./frontend
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - rails

  db:
    image: postgres:17.6-alpine
    restart: always
    container_name: song-list-postgres
    volumes:
      - database:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: song_list_production

  redis:
    image: redis:alpine
    container_name: song-list-redis
    restart: always
    volumes:
      - redis-data:/var/lib/redis

  nginx:
    container_name: song-list-nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    restart: always
    ports:
      - 54020:3080
      - 54030:4080
    depends_on:
      - rails
      - next
    volumes:
      - public:/app/public

volumes:
  database:
  public:
  redis-data:
